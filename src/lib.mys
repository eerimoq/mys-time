c"""source-before-namespace
#include <ctime>
"""

class TimeError(Error):
    message: string

class Time:
    """Time in seconds and nanoseconds.

    """

    seconds: i64
    nanoseconds: i32

    def __eq__(self, other: Time) -> bool:
        return (self.seconds == other.seconds
                and self.nanoseconds == other.nanoseconds)

    def __gt__(self, other: Time) -> bool:
        if self.seconds > other.seconds:
            return True
        elif self.seconds == other.seconds:
            return self.nanoseconds > other.nanoseconds
        else:
            return False

    def __iadd__(self, other: Time):
        self.seconds += other.seconds
        self.nanoseconds += other.nanoseconds

        if self.nanoseconds >= 1_000_000_000:
            self.seconds += 1
            self.nanoseconds -= 1_000_000_000

    def __isub__(self, other: Time):
        self.seconds -= other.seconds
        self.nanoseconds -= other.nanoseconds

        if self.nanoseconds < 0:
            self.seconds -= 1
            self.nanoseconds += 1_000_000_000

class DateTime:
    """Date and time.

    """

    year: i32
    month: i8
    day: i8
    hour: i8
    minute: i8
    second: i8

    def __init__(self, time: Time):
        """Create a DateTime object from given UTC time.

        """

        ok = False

        c"""
        std::time_t t;
        std::tm *tm;

        t = time->seconds;
        tm = std::gmtime(&t);

        if (tm != NULL) {
            year = 1900 + tm->tm_year;
            month = tm->tm_mon + 1;
            day = tm->tm_mday;
            hour = tm->tm_hour + 1;
            minute = tm->tm_min;
            second = tm->tm_sec;
            ok = true;
        }
        """

        if not ok:
            raise TimeError("Time convertion failed.")

    def to_time(self) -> Time:
        """Create a Time object in UTC from this date and time.

        """

        raise NotImplementedError()

@test
def test_time():
    time = Time(5, 1)
    assert time.seconds == 5
    assert time.nanoseconds == 1

@test
def test_datetime_from_time_epoch():
    datetime = DateTime(Time(0, 0))
    print(datetime)
    assert datetime.year == 1970
    assert datetime.month == 1
    assert datetime.day == 1
    assert datetime.hour == 1
    assert datetime.minute == 0
    assert datetime.second == 0

@test
def test_datetime_from_time_now():
    datetime = DateTime(Time(1615130879, 0))
    print(datetime)
    assert datetime.year == 2021
    assert datetime.month == 3
    assert datetime.day == 7
    assert datetime.hour == 16
    assert datetime.minute == 27
    assert datetime.second == 59
